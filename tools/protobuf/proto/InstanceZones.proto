
// 包。命名空间
package InstanceZones;

//地图id标号
//	1   2   3   4   5   6   7 
//	8   9  10  11  12  13  14
// 15  16  17  18  19  20  21
// 22  23  24  25  26  27  28
// 29  30  31  32  33  34  35
// 36  37  38  39  40  41  42
// 43  44  45  46  47  48  49

message msg_point {
	required uint32 x = 1;				 //地图x坐标 [1-1024/32*7]
	required uint32 y = 2;				 //地图y坐标 [1-640/32*7]		
}


//地图事件消息
message msg_event {
	required uint32 event_id = 1;				//事件id
	required uint32 event_tid = 2;				//事件模版id(数据表中的id)
	required msg_point point = 3;				//事件出现的位置
}


message msg_map {
	required uint32 map_id = 1;				// 地图id
	required bool is_unlock = 2;			// 占领据点后，解锁（true)
}


//入侵者信息，包括失败的
message msg_inbreak{
	required string rid = 1;						//入侵的rid
	required string name = 2;						//入侵者名字
	optional uint32 lose_game_money = 3;			//损失游戏币，失败的时候可以不填写
	required uint32 time = 4;						//时间 
	
}


//加载地图信息
message load_map_info {
	message request {
		required bool is_need_map_info = 1;				//是否需要地图信息
	}
	message response {
		repeated msg_map map_list = 1;					//地图信息
		repeated msg_point block_point_list = 2;		//移动的网格列表
		repeated msg_event event_list = 4;				//事件列表
		optional msg_point char_point = 3;				//角色坐标

		repeated msg_inbreak inbreak_list = 5;			//入侵者列表
		optional uint32	rob_time  = 6;					//今天被虐夺次数
		optional uint32	game_money  = 7;				//当前宝藏金币 
		optional uint32	treasure_money  = 11;			//可领宝藏金币
		optional uint32	lose_game_money  = 8;			//损失金币 
		optional msg_point treasure_point = 9;			//放置的宝藏位置，默认0，0
		optional bool is_receive_treasure = 10;			//是否领取过宝藏
	}
}


//通知占领结果
message notify_occupy_result {
	required uint32 map_id = 1;					// 地图id
	required uint32 is_unlock = 2;				// 是否占领成功 成功之后解锁，不成功不解锁
	repeated uint32 open_map_list = 3;			// 占领成功后开启的地图
}


//通知占领主城
message notify_occupy_maincity {
	required bool is_occupy_maincity = 1;		// 是否攻打过主城
}


//打开网格
message open_map_block {
	message request {
		repeated msg_point block_point_list = 1;	// 移动的网格列表
	}
	message response {
		required bool is_success = 1;			// 返回可以移动的最后一个网格
	}
}


//开始战斗
message start_battle {
	message request {
		optional bool is_main_city = 1;				//是否攻打主城 true：打主城 false打据点
	}

	message response {
		required bool is_success = 1;				//是否成功
	}
}


//跳转地图
message goto_map{
	message request {
		required uint32 map_id = 1;						//地图id
	}

	message response {
		required bool is_success = 1;					//是否成功
		optional msg_point char_point = 2;				//角色坐标
	}
}




//通知事件
message notify_event {
	repeated msg_event event_list = 1;			//事件列表
}


//奖励消息
message msg_prize{
	required uint32 item_tid  = 1;			//道具模版id
	required uint32 item_num = 2;			//数量
}


//触发事件
message trigger_event {
	message request {
		required uint32 event_id = 1;		//事件id
	}
	
	message response {
		required bool is_success = 1;			//是否成功触发事件
		repeated msg_prize prize_list = 2; 		//触发事件时，返回的奖励列表
	}
}



//放置宝藏
message place_treasure {
	message request {
		required msg_point place_point = 1;				//放置的位置
	}

	message response {
		required bool is_success = 1; 					//是否放置成功
	}
}


//领取宝藏，十点过后领取
message receive_treasure {
	message request {

	}

	message response {
		required bool is_success = 1;			//是否成功触发事件
		repeated msg_prize prize_list = 2; 		//返回的奖励列表
	}
}


//通知入侵结果，被入侵者收到的通知
message notify_inbreak_result {
	required msg_inbreak inbreak_list = 1;			//入侵者
	required uint32	rob_time  = 2;					//今天被虐夺次数
	required uint32	game_money  = 3;				//当前游戏金币
	required uint32	lose_game_money  = 4;			//损失金币，如果=0入侵失败  >0入侵成功
}



message notify_inbreak_info {
	repeated msg_map map_list = 2;					//地图信息
	repeated msg_point block_point_list = 3;		//移动的网格列表
	required msg_point char_point = 4;				//角色坐标
	repeated msg_event event_list = 5;				//事件列表
	required uint32 failed = 6;						//失败次数
	required msg_point treasure_point = 7;			//入侵的宝藏位置
	required uint32 inbreak_map_id = 8;				//入侵的初始化地图

	required string rid = 11;						//被入侵的玩家rid

	optional uint32 inbreak_id = 9;					// 入侵id	

	required bool is_occupy_maincity = 10;			//是否攻打过主城


	optional string name = 12;						////所入侵的玩家名字

}

//匹配入侵
message match_inbreak {
	message request {
	}

	message response {
		required uint32 result = 1;					// 1匹配成功 2该玩家今天受到保护，不能入侵
		optional uint32 inbreak_id = 2;				// 入侵id
	}
}

//取消入侵
message cancel_inbreak {
	message request {
	}

	message response {
		required uint32 is_success = 1;					//是否成功取消入侵
	}
}


//加载入侵地图信息
message load_inbreak_map_info {
	message request {
		required bool is_need_map_info = 1;				//是否需要地图信息
	}
	message response {
		required uint32 is_inbreak = 1;					//0:无入侵，进入等待匹配 1:入侵中 进入等待服务器下发入侵信息
	}
}


//留言
message inbreak_leave_word {
	message request {
		optional uint32 inbreak_id = 1;				// 入侵id
		required string text = 2;					//留言
	}
	message response {
		required uint32 is_success = 1;				//是否留言成功
	}
}


//找到宝藏
message find_treasure {
	message request {
	}
	message response {
		required uint32 is_success = 5;				//是否成功
		repeated msg_prize prize_list = 6; 		//返回的奖励列表

		required uint32 distance = 1;					// 路程
		required uint32 fort = 2;						// 占领的据点
		required uint32 box = 3;						// 获取的宝箱
		required uint32 failed = 4;						// 失败次数
	}
}


//通知入侵时间到了，需要重新入侵（入侵结算）
message notify_inbreak_time_out {
}


//更新地图信息
message update_map_info {
	message request {
	}
	message response {
		optional uint32	game_money  = 1;				//当前宝藏金币 
		optional uint32	treasure_money  = 2;			//可领宝藏金币
	}
}



//通知匹配超时
message notify_match_time_out {
	
}

//退出入侵
message exit_inbreak {
	message request {
	}
	message response {
		required uint32 is_success = 5;				//是否成功
	}
}



//通知入侵进度，发送给入侵者的
message notify_inbreak_progress {
	optional uint32 inbreak_result = 1;				//入侵结果 1.失败
	required uint32 failed = 2;						//失败次数
}

